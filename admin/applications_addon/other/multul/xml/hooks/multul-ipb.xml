<?xml version="1.0" encoding="UTF-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Multul</hook_name>
      <hook_desc></hook_desc>
      <hook_author></hook_author>
      <hook_email></hook_email>
      <hook_website></hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:4:{s:20:"hook_ipb_version_min";i:31000;s:20:"hook_ipb_version_max";i:0;s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1</hook_version_human>
      <hook_version_long>10001</hook_version_long>
      <hook_extra_data/>
      <hook_key>multul</hook_key>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>multul_global_link.php</hook_file_real>
      <hook_type>skinHooks</hook_type>
      <hook_classname>multul_global_link</hook_classname>
      <hook_data><![CDATA[a:7:{s:12:"dataLocation";s:0:"";s:15:"classToOverload";s:11:"skin_global";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[class multul_global_link extends skin_global(~id~)
      {
        public static function multul_get_link($user_id,$user_name){
            $current_id             = ipsRegistry::member()->member_id;
            $multul_status          = ipsRegistry::$settings['multul_status'];

            if ($current_id != 0 && $current_id != $user_id && $multul_status) {
              $multul_link = '<a href="javascript:;" onclick="multul.im.openContact(' . $user_id . ',\'' . $user_name . '\')"><img src="http://cdn.multul.ru/v1/images/messenger/send_msg.png" alt="" /></a><br>';
            }
            return $multul_link;
        }

	public function userInfoPane( $author, $contentid, $options ){
            $author['title'] .= self::multul_get_link($author['author_id'],$author['author_name']);
            return parent::userInfoPane( $author, $contentid, $options );
	}	
}]]></hooks_source>
    </file>
    <file>
      <hook_file_real>multul_profiles_link.php</hook_file_real>
      <hook_type>skinHooks</hook_type>
      <hook_classname>multul_profiles_link</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:12:"skin_profile";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[class multul_profiles_link extends skin_profile(~id~)
      {
        public static function multul_get_link($user_id,$user_name){
                $current_id		= ipsRegistry::member()->member_id;
                $multul_status          = ipsRegistry::$settings['multul_status'];

            	if ($current_id != 0 && $current_id != $user_id && $multul_status) {
                    $multul_link = '<a href="javascript:;" onclick="multul.im.openContact(' . $user_id . ',\'' . $user_name . '\')"><img src="http://cdn.multul.ru/v1/images/messenger/send_msg.png" alt="" /></a><br>';
                }
             return $multul_link;
        }

        public function showCard( $member, $download=0 ){
		$member['title'] .= '<br>'.self::multul_get_link($member['member_id'],$member['members_display_name']);
		return parent::showCard( $member, $download );
	}

	public function profileModern( $tabs=array(), $member=array(), $comments='', $friends=array(), $visitors=array(), $default_tab='status', $default_tab_content='' ){
		$member['title'] .= '<br>'.self::multul_get_link($member['member_id'],$member['members_display_name']);
                return parent::profileModern( $tabs, $member, $comments, $friends, $visitors, $default_tab, $default_tab_content );
	}
}]]></hooks_source>
    </file>
    <file>
      <hook_file_real>multul_init.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>multul_init</hook_classname>
      <hook_data><![CDATA[a:7:{s:12:"dataLocation";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_global";s:12:"skinFunction";s:14:"globalTemplate";s:4:"type";s:2:"if";s:2:"id";s:15:"mainpageContent";s:8:"position";s:11:"pre.startif";}]]></hook_data>
      <hooks_source><![CDATA[<?php
class multul_init{

      	public function getOutput(){
                $current_id		= ipsRegistry::member()->member_id;
                $multul_status          = ipsRegistry::$settings['multul_status'];
                if ($current_id != 0 && $multul_status){
                     require IPS_ROOT_PATH.'applications_addon\other\multul\modules_admin\multul\multul.php';
                     return admin_multul_multul_multul::multul_init();
                }
	}
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>